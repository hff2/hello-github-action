name: Release
run-name: Test Close MileStone
on:
  milestone:
    types: [closed]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Create release
      env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
      run: gh release create ${{ github.event.milestone.title }}
    - name: Install yq
      id: setup-yq
      uses: shiipou/setup-yq-action@v2.2.0
      
    - name: display yq result
      run: |
        echo $(yq .deploy.backend ./deploy/deploy.yml)

    - name: upload file
      env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
      run: gh release upload ${{ github.event.milestone.title }} release.yml
      
    - name: Install oci-cli
      uses: bytesbay/oci-cli-action@v1.0.2
      with:
        user: "${{ secrets.OCI_USER }}"
        fingerprint: "${{ secrets.OCI_FINGERPRINT }}"
        tenancy: "${{ secrets.OCI_TENANCY }}"
        region: "${{ secrets.OCI_REGION }}"
        api_key: |
          ${{ secrets.OCI_API_KEY }}
        
    - name: Download oci file
      run: |
        oci os object bulk-download -bn CTBC_Backend --download-dir . --prefix 0a4b62ca1347c482a7871a8fd5a4886433d19b4d.jar
    - name: display file
      run: |
        pwd
        ls
#         oci os object get --namespace nrxtlgtjdbvi --bucket-name CTBC_Frontend --name 119d1c1c4c94a0e1de60db756438d147692943e0.zip --file @- | curl -X POST -H "Authorization: token ${{ secrets.ACTION_TOKEN }}" -H "Content-Type: application/zip" --data-binary @- "https://uploads.github.com/repos/hff2/hello-github-action/releases/${{ github.event.milestone.title }}/assets?name=oci_download_frontend"
